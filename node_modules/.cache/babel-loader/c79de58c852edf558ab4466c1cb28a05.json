{"ast":null,"code":"import _classCallCheck from\"/home/sailoroncanvas/final_project/ewha-react-publishing/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/sailoroncanvas/final_project/ewha-react-publishing/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{osState}from'./ridge';function tryParseJSON(jsonString){try{return JSON.parse(jsonString);}catch(error){return null;}}export var Bridge=/*#__PURE__*/function(){function Bridge(){_classCallCheck(this,Bridge);}_createClass(Bridge,null,[{key:\"postMessage\",value:function postMessage(action,value){var _ReactNativeWebView;var data=JSON.stringify({action:action,value:value});(_ReactNativeWebView=window.ReactNativeWebView)===null||_ReactNativeWebView===void 0?void 0:_ReactNativeWebView.postMessage(data);}},{key:\"handleMessageEvent\",value:function handleMessageEvent(_ref){var data=_ref.data;var command=tryParseJSON(data);if((command===null||command===void 0?void 0:command.kind)!=='webview')return;if(Bridge[command.action]){Bridge[command.action](command.value);}else{Bridge.postMessage('error',\"(RN -> WebView) Invalid action: \".concat(data));}}},{key:\"init\",value:function init(_ref2){var os=_ref2.os;osState.set(os!==null&&os!==void 0?os:'webView');}}]);return Bridge;}();// @ts-ignore\nBridge.os=void 0;document.addEventListener('message',Bridge.handleMessageEvent);window.addEventListener('message',Bridge.handleMessageEvent);","map":{"version":3,"sources":["/home/sailoroncanvas/final_project/ewha-react-publishing/src/plugins/bridge.ts"],"names":["osState","tryParseJSON","jsonString","JSON","parse","error","Bridge","action","value","data","stringify","window","ReactNativeWebView","postMessage","command","kind","os","set","document","addEventListener","handleMessageEvent"],"mappings":"0RAAA,OAASA,OAAT,KAAwB,SAAxB,CAaA,QAASC,CAAAA,YAAT,CAAsBC,UAAtB,CAAuC,CACrC,GAAI,CACF,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWF,UAAX,CAAP,CACD,CAAC,MAAOG,KAAP,CAAc,CACd,MAAO,KAAP,CACD,CACF,CAED,UAAaC,CAAAA,MAAb,4HAGE,qBAAmBC,MAAnB,CAAmCC,KAAnC,CAAgD,yBAC9C,GAAMC,CAAAA,IAAI,CAAGN,IAAI,CAACO,SAAL,CAAe,CAAEH,MAAM,CAANA,MAAF,CAAUC,KAAK,CAALA,KAAV,CAAf,CAAb,CACA,qBAACG,MAAD,CAAgBC,kBAAhB,kEAAoCC,WAApC,CAAgDJ,IAAhD,EACD,CANH,kCAQE,iCAAkD,IAAtBA,CAAAA,IAAsB,MAAtBA,IAAsB,CAChD,GAAMK,CAAAA,OAAO,CAAGb,YAAY,CAACQ,IAAD,CAA5B,CACA,GAAI,CAAAK,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEC,IAAT,IAAkB,SAAtB,CAAiC,OACjC,GAAIT,MAAM,CAACQ,OAAO,CAACP,MAAT,CAAV,CAA4B,CAC1BD,MAAM,CAACQ,OAAO,CAACP,MAAT,CAAN,CAAuBO,OAAO,CAACN,KAA/B,EACD,CAFD,IAEO,CACLF,MAAM,CAACO,WAAP,CAAmB,OAAnB,2CAA+DJ,IAA/D,GACD,CACF,CAhBH,oBAkBE,oBAAyB,IAAXO,CAAAA,EAAW,OAAXA,EAAW,CACvBhB,OAAO,CAACiB,GAAR,CAAYD,EAAZ,SAAYA,EAAZ,UAAYA,EAAZ,CAAkB,SAAlB,EACD,CApBH,sBAuBA;AAvBaV,M,CACJU,E,QAuBTE,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,CAAqCb,MAAM,CAACc,kBAA5C,EACAT,MAAM,CAACQ,gBAAP,CAAwB,SAAxB,CAAmCb,MAAM,CAACc,kBAA1C","sourcesContent":["import { osState } from './ridge';\n\ntype Action = 'log' | 'error';\n\ninterface Command {\n  kind?: 'webview';\n  action: Exclude<\n    keyof typeof Bridge,\n    'prototype' | 'os' | 'postMessage' | 'handleMessageEvent'\n  >;\n  value?: any;\n}\n\nfunction tryParseJSON(jsonString: any) {\n  try {\n    return JSON.parse(jsonString);\n  } catch (error) {\n    return null;\n  }\n}\n\nexport class Bridge {\n  static os: string;\n\n  static postMessage(action: Action, value?: any) {\n    const data = JSON.stringify({ action, value });\n    (window as any).ReactNativeWebView?.postMessage(data);\n  }\n\n  static handleMessageEvent({ data }: MessageEvent) {\n    const command = tryParseJSON(data) as Command;\n    if (command?.kind !== 'webview') return;\n    if (Bridge[command.action]) {\n      Bridge[command.action](command.value);\n    } else {\n      Bridge.postMessage('error', `(RN -> WebView) Invalid action: ${data}`);\n    }\n  }\n\n  static init({ os }: any) {\n    osState.set(os ?? 'webView');\n  }\n}\n\n// @ts-ignore\ndocument.addEventListener('message', Bridge.handleMessageEvent);\nwindow.addEventListener('message', Bridge.handleMessageEvent);\n"]},"metadata":{},"sourceType":"module"}